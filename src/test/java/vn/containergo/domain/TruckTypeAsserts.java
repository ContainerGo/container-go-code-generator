package vn.containergo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TruckTypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTruckTypeAllPropertiesEquals(TruckType expected, TruckType actual) {
        assertTruckTypeAutoGeneratedPropertiesEquals(expected, actual);
        assertTruckTypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTruckTypeAllUpdatablePropertiesEquals(TruckType expected, TruckType actual) {
        assertTruckTypeUpdatableFieldsEquals(expected, actual);
        assertTruckTypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTruckTypeAutoGeneratedPropertiesEquals(TruckType expected, TruckType actual) {
        assertThat(expected)
            .as("Verify TruckType auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTruckTypeUpdatableFieldsEquals(TruckType expected, TruckType actual) {
        assertThat(expected)
            .as("Verify TruckType relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getCategory()).as("check category").isEqualTo(actual.getCategory()))
            .satisfies(e -> assertThat(e.getHeight()).as("check height").isEqualTo(actual.getHeight()))
            .satisfies(e -> assertThat(e.getLength()).as("check length").isEqualTo(actual.getLength()))
            .satisfies(e -> assertThat(e.getMaxSpeed()).as("check maxSpeed").isEqualTo(actual.getMaxSpeed()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getWeight()).as("check weight").isEqualTo(actual.getWeight()))
            .satisfies(e -> assertThat(e.getWidth()).as("check width").isEqualTo(actual.getWidth()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTruckTypeUpdatableRelationshipsEquals(TruckType expected, TruckType actual) {}
}
