package vn.containergo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ShipperAccountAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipperAccountAllPropertiesEquals(ShipperAccount expected, ShipperAccount actual) {
        assertShipperAccountAutoGeneratedPropertiesEquals(expected, actual);
        assertShipperAccountAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipperAccountAllUpdatablePropertiesEquals(ShipperAccount expected, ShipperAccount actual) {
        assertShipperAccountUpdatableFieldsEquals(expected, actual);
        assertShipperAccountUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipperAccountAutoGeneratedPropertiesEquals(ShipperAccount expected, ShipperAccount actual) {
        assertThat(expected)
            .as("Verify ShipperAccount auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipperAccountUpdatableFieldsEquals(ShipperAccount expected, ShipperAccount actual) {
        assertThat(expected)
            .as("Verify ShipperAccount relevant properties")
            .satisfies(e -> assertThat(e.getBalance()).as("check balance").isEqualTo(actual.getBalance()))
            .satisfies(e -> assertThat(e.getAccountType()).as("check accountType").isEqualTo(actual.getAccountType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipperAccountUpdatableRelationshipsEquals(ShipperAccount expected, ShipperAccount actual) {
        assertThat(expected)
            .as("Verify ShipperAccount relationships")
            .satisfies(e -> assertThat(e.getShipper()).as("check shipper").isEqualTo(actual.getShipper()));
    }
}
