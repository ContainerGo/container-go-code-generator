
application {
  config {
    baseName containerGoServer
    applicationType monolith
    packageName vn.containergo
    authenticationType jwt
    prodDatabaseType mongodb
    clientFramework angularX
  }
  entities *
  filter *
  paginate * with pagination
  service all with serviceImpl
  dto * with mapstruct
}

// Common
entity Provice {
	id Long,
    code String required,
    name String required,
    description String
}

entity District {
	id Long,
    code String required,
    name String required,
    description String
}

entity Ward {
	id Long,
    code String required,
    name String required,
    description String
}

// Shipper
entity Shipper {
	id Long,
    code String required,
    name String required,
    address String required,
    taxCode String,
    companySize Integer,
    paymentType String required,
    isApproved Boolean,
    isBillingInformationComplete Boolean,
    isProfileComplete Boolean
}

entity ShipperPerson {
	id Long,
    name String required,
    phone String required,
    email String,
    address String
}

// Carrier
entity TruckType {
	id Long,
    code String required,
    name String required,
    category String,
    height Integer,
    length Integer,
    maxSpeed Double,
    type String,
    weight Integer,
    width Integer
}

enum TruckStatus {
	AVAILABLE,
    IN_TRANSIT,
    UNDER_MAINTENANCE,
    OUT_OF_SERVICE
}

entity Truck {
    id Long,
    code String required,
    name String required,
    model String,
    manufacturer String,
    year Integer,
    capacity Double,
    status TruckStatus required,
    mileage Double,
    numberPlate String required,
    lat Double,
    lng Double
}

entity Carrier {
	id Long,
    code String required,
    name String required,
    address String required,
    taxCode String,
    bankAccount String,
    bankName String,
    accountName String,
    branchName String,
    companySize Integer,
    isApproved Boolean,
    vehicles Integer,
    shipmentsLeftForDay Integer,
    verifiedSince Instant
}

entity CarrierPerson {
	id Long,
    name String required,
    phone String required,
    email String,
    address String
}

entity CenterPerson {
	id Long,
    name String required,
    phone String required,
    email String,
    address String
}

entity CenterPersonGroup {
	id Long,
    name String required,
    description String
}

// Container
enum ContainerState {
    NEW,
	BIDDING,
    WAITING_FOR_OFFERS,
    OFFER_CHOSEN,
    SHIPMENT_PLAN_SENT,
    SHIPMENT_IN_PROGRESS,
    SHIPMENT_SUCCESS,
    SHIPMENT_FAIL,
    SHIPMENT_POD_APPROVED
}

enum ShipmentStatus {
    NEW
}

entity ContainerStatus {
	id Long,
    code String required,
    name String required,
    description String
}

entity ContainerStatusGroup {
	id Long,
    code String required,
    name String required,
    description String
}

entity ContainerType {
	id Long,
    code String required,
    name String required,
    description String
}

entity ContainerOwner {
	id Long,
    name String required,
    phone String,
    email String,
    address String
}

entity Container {
	id Long,
    contNo String required,
    estimatedPrice Double required,
    distance Double required,
    desiredPrice Double required,
    additionalRequirements String,
    dropoffContact String,
    dropoffContactPhone String,
    dropoffAddress String,
    dropoffLat Double,
    dropoffLng Double,
    dropoffUntilDate Instant,
    state ContainerState required,
    shipperId Long required,
    carrierId Long,
    totalWeight Double required,
    pickupFromDate Instant,
    biddingFromDate Instant,
    biddingUntilDate Instant
}

entity ShipmentHistory {
	id Long,
    event String required,
    timestamp Instant required,
    executedBy String required,
    location String,
    lat Double,
    lng Double
}

// Offer
enum OfferState {
    PENDING, // Offer has been made, waiting for acceptance
    ACCEPTED, // Offer has been accepted
    REJECTED, // Offer has been rejected
    EXPIRED, // Offer has expired
    WITHDRAWN // Offer has been withdrawn by the bidder
}

entity Offer {
	id Long,
    message String,
    pickupFromDate Instant required,
    pickupUntilDate Instant required,
    dropoffFromDate Instant required,
    dropoffUntilDate Instant required,
    state OfferState required,
    price Double required,
    carrierId Long required,
    carrierPersonId Long,
    truckId Long
}

relationship ManyToOne {
	Container{dropoffProvice} to Provice
    Container{dropoffDistrict} to District
    Container{dropoffWard} to Ward
    Container{type required} to ContainerType
    Container{status required} to ContainerStatus
    Container{truckType} to TruckType
    Container{truck} to Truck
    Container{owner} to ContainerOwner
    ShipmentHistory{container required} to Container
    Offer{container required} to Container
    Truck{type required} to TruckType
}

relationship OneToMany {
	ContainerStatusGroup to ContainerStatus{group}
    Carrier to Truck{carrier}
    Carrier to CarrierPerson{carrier}
    Shipper to ShipperPerson{shipper}
}

relationship ManyToMany {
    CenterPerson{groups} to CenterPersonGroup{users}
}

